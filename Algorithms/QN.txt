#include <stdio.h>
#include <stdlib.h>
#include <limits.h>


struct Queue{
	int f,r;
	int size;
	struct Node** a;
};

struct Queue* CreateQ(int size){
	struct Queue* q = (struct Queue*)malloc(sizeof(struct Queue));
	q->a= (struct Node**)malloc(sizeof(struct Node*)*size);
	q->size = size;
	q->r = q->f = -1;
	int i=0;
	for(i=0;i<size;i++)
		q->a[i] = NULL;
	return q;
}

int isEmpty(struct Queue* q){
	return (q->r == -1);
}
int isFull(struct Queue* q){
	return (q->r == q->size-1);
}
void Enqueue(struct Queue* q,struct Node* n){
	if (isFull(q))
		return ;
	q->a[++q->r] = n;
	if (q->f == -1)
		q->f = 0;
}
struct Node* Dequeue(struct Queue* q){
	if (isEmpty(q))
		return NULL;
	struct Node* n = q->a[q->f++];
	if (q->f > q->r){
		q->f = q->r = -1;
	}
	return n;

}
struct Node* peek(struct Queue*q){
	return (q->a[q->f]);
}

void print(struct Queue* q){
	int i=0;
	printf("\n");
	for(i=q->f;i<=q->r;i++){
		printf("%d ",q->a[i]);
	}
	printf("\n");
		
}

